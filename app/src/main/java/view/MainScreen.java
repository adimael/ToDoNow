/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.ProjectController;
import controller.TaskController;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import model.Project;
import model.Task;
import util.ButtonColumnCellRenderer;
import util.DeadlineColumnCellRenderer;
import util.TaskTableModel;
import util.CompletedColumnCellRenderer;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import java.io.File;
import view.LoginScreen;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import java.awt.Window;
import javax.swing.JOptionPane;

/**
 *
 * @author adimael
 */
public class MainScreen extends javax.swing.JFrame {

    ProjectController projectController;
    TaskController taskController;
    
    DefaultListModel projectsModel;
    TaskTableModel taskModel;
    /**
     * Creates new form MainScreen
     */
    public MainScreen() {
        initComponents();
        
        initDataController();
        initComponentsModel();
        
        decorateTableTask();
        
         Image icon = new ImageIcon(this.getClass().getResource("/toDoNow-logo.png")).getImage();
         this.setIconImage(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPaneTasks = new javax.swing.JScrollPane();
        jTableTasks = new javax.swing.JTable();
        jPanelToolBar = new javax.swing.JPanel();
        jLabelToolBarTitle = new javax.swing.JLabel();
        jLabelToolBarSubTitle = new javax.swing.JLabel();
        jLabelToolBarFrase = new javax.swing.JLabel();
        jButtonToolBarMenu = new javax.swing.JButton();
        jButtonLogout = new javax.swing.JButton("Sair");
        jButtonLogout.setBackground(new java.awt.Color(220, 53, 69));
        jButtonLogout.setForeground(Color.WHITE);
        jButtonLogout.setFont(new Font("Segoe UI", Font.BOLD, 14));
        jButtonLogout.setFocusPainted(false);
        jButtonLogout.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 16, 8, 16));
        jButtonLogout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonLogout.addActionListener(e -> {
            System.out.println("Botão Sair clicado!");
            new File("user_autologin.txt").delete();
            try {
                // Limpar token do banco
                String usuario = null;
                if (LoginScreen.class.getDeclaredField("usuarioLogado") != null) {
                    usuario = (String) LoginScreen.class.getDeclaredField("usuarioLogado").get(null);
                }
                if (usuario != null) {
                    new controller.UserController().limparTokenAutologin(usuario);
                }
            } catch (Exception ex) {
                System.out.println("Erro ao limpar token de autologin no logout: " + ex.getMessage());
            }
            // Fechar completamente a aplicação e reiniciar
            this.dispose();
            // Forçar fechamento e reiniciar
            SwingUtilities.invokeLater(() -> {
                try {
                    // Tentar fechar todas as janelas
                    for (Window window : Window.getWindows()) {
                        window.dispose();
                    }
                    // Abrir nova tela de login
                    new view.LoginScreen(null).showLoginDialog();
                } catch (Exception ex) {
                    // Se falhar, usar System.exit
                    System.exit(0);
                }
            });
        });
        jPanelProjects = new javax.swing.JPanel();
        jLabelProjects = new javax.swing.JLabel();
        jButtonProjectsAdd = new javax.swing.JButton();
        jButtonProjectsDelete = new javax.swing.JButton();
        jPanelTasks = new javax.swing.JPanel();
        jLabelTasks = new javax.swing.JLabel();
        jButtonTasksAdd = new javax.swing.JButton();
        jPanelProjectList = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListProjects = new javax.swing.JList<>();
        jPanelTaskList = new javax.swing.JPanel();
        jPanelEmptyList = new javax.swing.JPanel();
        jLabelTaskListIcon = new javax.swing.JLabel();
        jLabelTaskListTitle = new javax.swing.JLabel();
        jLabelTaskListSubTitle = new javax.swing.JLabel();

        jScrollPaneTasks.setBorder(null);

        jTableTasks.setBackground(new java.awt.Color(255, 255, 255));
        jTableTasks.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        jTableTasks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Descrição", "Prazo", "Tarefa concluída"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableTasks.setGridColor(java.awt.Color.white);
        jTableTasks.setRowHeight(50);
        jTableTasks.setSelectionBackground(new java.awt.Color(204, 161, 246));
        jTableTasks.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableTasks.setShowHorizontalLines(true);
        jTableTasks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableTasksMouseClicked(evt);
            }
        });
        jScrollPaneTasks.setViewportView(jTableTasks);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(700, 800));

        jPanelToolBar.setBackground(new java.awt.Color(4, 12, 58));

        jLabelToolBarTitle.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabelToolBarTitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabelToolBarTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toDoNow (1).png"))); // NOI18N
        jLabelToolBarTitle.setText("ToDoNow");

        jLabelToolBarSubTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelToolBarSubTitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabelToolBarSubTitle.setText("             Gestão de tarefas");
        jLabelToolBarSubTitle.setToolTipText("");

        jLabelToolBarFrase.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabelToolBarFrase.setForeground(new java.awt.Color(255, 255, 255));
        jLabelToolBarFrase.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelToolBarFrase.setText("Tenha o controle das suas tarefas!");

        jButtonToolBarMenu.setBackground(new java.awt.Color(4, 12, 58));
        jButtonToolBarMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cardapio (2).png"))); // NOI18N
        jButtonToolBarMenu.setBorder(null);
        jButtonToolBarMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanelToolBarLayout = new javax.swing.GroupLayout(jPanelToolBar);
        jPanelToolBar.setLayout(jPanelToolBarLayout);
        jPanelToolBarLayout.setHorizontalGroup(
            jPanelToolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelToolBarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelToolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelToolBarLayout.createSequentialGroup()
                        .addGroup(jPanelToolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelToolBarFrase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelToolBarLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabelToolBarSubTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonToolBarMenu)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonLogout)))
                        .addContainerGap())
                    .addComponent(jLabelToolBarTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanelToolBarLayout.setVerticalGroup(
            jPanelToolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelToolBarLayout.createSequentialGroup()
                .addComponent(jLabelToolBarTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelToolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelToolBarSubTitle)
                    .addComponent(jButtonToolBarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelToolBarFrase)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelProjects.setBackground(java.awt.Color.white);

        jLabelProjects.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelProjects.setForeground(new java.awt.Color(10, 158, 254));
        jLabelProjects.setText("Projetos");

        jButtonProjectsAdd.setBackground(new java.awt.Color(88, 205, 69));
        jButtonProjectsAdd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonProjectsAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pencil (2).png"))); // NOI18N
        jButtonProjectsAdd.setText("Criar");
        jButtonProjectsAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonProjectsAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonProjectsAddMouseClicked(evt);
            }
        });

        jButtonProjectsDelete.setBackground(new java.awt.Color(255, 51, 51));
        jButtonProjectsDelete.setFont(new java.awt.Font("Segoe UI", 0, 14));
        jButtonProjectsDelete.setText("Deletar");
        jButtonProjectsDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonProjectsDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonProjectsDeleteMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelProjectsLayout = new javax.swing.GroupLayout(jPanelProjects);
        jPanelProjects.setLayout(jPanelProjectsLayout);
        jPanelProjectsLayout.setHorizontalGroup(
            jPanelProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProjectsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelProjects)
                .addGap(20, 20, 20)
                .addComponent(jButtonProjectsAdd)
                .addGap(20, 20, 20)
                .addComponent(jButtonProjectsDelete)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelProjectsLayout.setVerticalGroup(
            jPanelProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProjectsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelProjects)
                    .addComponent(jButtonProjectsAdd)
                    .addComponent(jButtonProjectsDelete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelTasks.setBackground(java.awt.Color.white);
        jPanelTasks.setForeground(java.awt.Color.white);

        jLabelTasks.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelTasks.setForeground(new java.awt.Color(10, 158, 254));
        jLabelTasks.setText("Tarefas");

        jButtonTasksAdd.setBackground(new java.awt.Color(88, 205, 69));
        jButtonTasksAdd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonTasksAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pencil (2).png"))); // NOI18N
        jButtonTasksAdd.setText("Criar");
        jButtonTasksAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonTasksAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTasksAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTasksLayout = new javax.swing.GroupLayout(jPanelTasks);
        jPanelTasks.setLayout(jPanelTasksLayout);
        jPanelTasksLayout.setHorizontalGroup(
            jPanelTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTasksLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTasks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonTasksAdd)
                .addContainerGap())
        );
        jPanelTasksLayout.setVerticalGroup(
            jPanelTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTasksLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonTasksAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(jLabelTasks))
                .addContainerGap())
        );

        jPanelProjectList.setBackground(java.awt.Color.white);

        jScrollPane1.setBorder(null);

        jListProjects.setBorder(null);
        jListProjects.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jListProjects.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListProjects.setFixedCellHeight(50);
        jListProjects.setSelectionBackground(new java.awt.Color(147, 69, 205));
        jListProjects.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListProjectsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListProjects);

        javax.swing.GroupLayout jPanelProjectListLayout = new javax.swing.GroupLayout(jPanelProjectList);
        jPanelProjectList.setLayout(jPanelProjectListLayout);
        jPanelProjectListLayout.setHorizontalGroup(
            jPanelProjectListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanelProjectListLayout.setVerticalGroup(
            jPanelProjectListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jPanelTaskList.setBackground(java.awt.Color.white);
        jPanelTaskList.setLayout(new java.awt.BorderLayout());

        jPanelEmptyList.setBackground(java.awt.Color.white);

        jLabelTaskListIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTaskListIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toDoNow-medio.png"))); // NOI18N

        jLabelTaskListTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelTaskListTitle.setForeground(new java.awt.Color(147, 69, 205));
        jLabelTaskListTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTaskListTitle.setText("Nenhuma Tarefa por aqui :D");

        jLabelTaskListSubTitle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelTaskListSubTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTaskListSubTitle.setText("Clique no botão “criar” para adicionar uma nova tarefa");

        javax.swing.GroupLayout jPanelEmptyListLayout = new javax.swing.GroupLayout(jPanelEmptyList);
        jPanelEmptyList.setLayout(jPanelEmptyListLayout);
        jPanelEmptyListLayout.setHorizontalGroup(
            jPanelEmptyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEmptyListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelEmptyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTaskListIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelTaskListTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelTaskListSubTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelEmptyListLayout.setVerticalGroup(
            jPanelEmptyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelEmptyListLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabelTaskListIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelTaskListTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelTaskListSubTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelTaskList.add(jPanelEmptyList, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelProjects, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelProjectList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelTasks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelTaskList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelTasks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelProjects, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelProjectList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelTaskList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonTasksAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTasksAddActionPerformed
        // Chamar o mesmo método do clique do mouse para garantir abertura do formulário
        jButtonTasksAddMouseClicked(null);
    }//GEN-LAST:event_jButtonTasksAddActionPerformed

    private void jButtonTasksAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonTasksAddMouseClicked
        // TODO add your handling code here:
        int projectIndex = jListProjects.getSelectedIndex();
        if (projectIndex == -1) {
            JOptionPane.showMessageDialog(this, "Selecione um projeto antes de adicionar uma tarefa.");
            return;
        }
        TaskDialogScreen taskDialogScreen = new TaskDialogScreen(this, rootPaneCheckingEnabled);
        Project project = (Project) projectsModel.get(projectIndex);
        taskDialogScreen.setProject(project);
        taskDialogScreen.setVisible(true);
        
        taskDialogScreen.addWindowListener(new WindowAdapter() {
            public void windowClosed(WindowEvent e){
                int projectIndex = jListProjects.getSelectedIndex();
                if (projectIndex == -1) return;
                Project project = (Project) projectsModel.get(projectIndex);
                loadTasks(project.getId());
            }
        });
    }//GEN-LAST:event_jButtonTasksAddMouseClicked

    private void jButtonProjectsAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonProjectsAddMouseClicked
        // TODO add your handling code here:
        ProjectDialogScreen projectDialogScreen = new ProjectDialogScreen(this, rootPaneCheckingEnabled);
        projectDialogScreen.setVisible(true);
        
        projectDialogScreen.addWindowListener(new WindowAdapter() {
            public void windowClosed(WindowEvent e){
                loadProjects();
            }
        });
    }//GEN-LAST:event_jButtonProjectsAddMouseClicked

    private void jButtonProjectsDeleteMouseClicked(java.awt.event.MouseEvent evt) {
        int selectedIndex = jListProjects.getSelectedIndex();
        if (selectedIndex != -1) {
            Project project = (Project) projectsModel.get(selectedIndex);
            int confirm = javax.swing.JOptionPane.showConfirmDialog(this, "Deseja realmente deletar o projeto '" + project.getName() + "'?", "Confirmar exclusão", javax.swing.JOptionPane.YES_NO_OPTION);
            if (confirm == javax.swing.JOptionPane.YES_OPTION) {
                projectController.removeById(project.getId());
                loadProjects();
                taskModel.setTasks(new java.util.ArrayList<>());
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Selecione um projeto para deletar.");
        }
    }

    private void jTableTasksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTasksMouseClicked
        // TODO add your handling code here:
        int rowIndex = jTableTasks.rowAtPoint(evt.getPoint());
        int columnIndex = jTableTasks.columnAtPoint(evt.getPoint());
        Task task = taskModel.getTasks().get(rowIndex);
        
        switch(columnIndex){
            case 3:
                taskController.update(task);
                break;
            case 4:
                TaskDialogScreen editDialog = new TaskDialogScreen(this, true);
                int projectIndexEdit = jListProjects.getSelectedIndex();
                Project projectEdit = (Project) projectsModel.get(projectIndexEdit);
                editDialog.setProject(projectEdit);
                editDialog.setTask(task);
                editDialog.setVisible(true);
                editDialog.addWindowListener(new WindowAdapter() {
                    public void windowClosed(WindowEvent e){
                        int projectIndex = jListProjects.getSelectedIndex();
                        Project project = (Project) projectsModel.get(projectIndex);
                        loadTasks(project.getId());
                    }
                });
                break;
            case 5:
                taskController.removeById(task.getId());
                taskModel.getTasks().remove(task);
                
                int projectIndex = jListProjects.getSelectedIndex();
                Project project = (Project) projectsModel.get(projectIndex);
                loadTasks(project.getId());
                
                break;
        }
    }//GEN-LAST:event_jTableTasksMouseClicked

    private void jListProjectsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListProjectsMouseClicked
        // TODO add your handling code here:
        int projectIndex = jListProjects.getSelectedIndex();
        Project project = (Project) projectsModel.get(projectIndex);
        loadTasks(project.getId());
    }//GEN-LAST:event_jListProjectsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Java swing".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonProjectsAdd;
    private javax.swing.JButton jButtonProjectsDelete;
    private javax.swing.JButton jButtonTasksAdd;
    private javax.swing.JButton jButtonToolBarMenu;
    private javax.swing.JButton jButtonLogout;
    private javax.swing.JLabel jLabelProjects;
    private javax.swing.JLabel jLabelTaskListIcon;
    private javax.swing.JLabel jLabelTaskListSubTitle;
    private javax.swing.JLabel jLabelTaskListTitle;
    private javax.swing.JLabel jLabelTasks;
    private javax.swing.JLabel jLabelToolBarFrase;
    private javax.swing.JLabel jLabelToolBarSubTitle;
    private javax.swing.JLabel jLabelToolBarTitle;
    private javax.swing.JList<String> jListProjects;
    private javax.swing.JPanel jPanelEmptyList;
    private javax.swing.JPanel jPanelProjectList;
    private javax.swing.JPanel jPanelProjects;
    private javax.swing.JPanel jPanelTaskList;
    private javax.swing.JPanel jPanelTasks;
    private javax.swing.JPanel jPanelToolBar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPaneTasks;
    private javax.swing.JTable jTableTasks;
    // End of variables declaration//GEN-END:variables

    public void decorateTableTask(){
        
        //Customizando o header da table de tarefas
        jTableTasks.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 18));
        jTableTasks.getTableHeader().setBackground(new Color(147, 69, 205));
        jTableTasks.getTableHeader().setForeground(new Color(255, 255, 255));
        
        jTableTasks.getColumnModel().getColumn(2).setCellRenderer(new DeadlineColumnCellRenderer());
        jTableTasks.getColumnModel().getColumn(3).setCellRenderer(new CompletedColumnCellRenderer());
        jTableTasks.getColumnModel().getColumn(4).setCellRenderer(new ButtonColumnCellRenderer("pencil (2)"));
        jTableTasks.getColumnModel().getColumn(5).setCellRenderer(new ButtonColumnCellRenderer("delete"));
        
        //Criando um sort automático para as colunas da table
        jTableTasks.setAutoCreateRowSorter(true);
    }
    
    public void initDataController(){
        projectController = new ProjectController();
        taskController = new TaskController();
    }
    
    public void initComponentsModel(){
        projectsModel = new DefaultListModel();
        loadProjects();
        
        taskModel = new TaskTableModel();
        jTableTasks.setModel(taskModel);
        loadTasks(3);
        
        if (!projectsModel.isEmpty()) {
            jListProjects.setSelectedIndex(0);
            int projectIndex = jListProjects.getSelectedIndex();
            Project project = (Project) projectsModel.get(0);
            loadTasks(project.getId());
        }
        
    }
    
    public void loadTasks(int idProject){
        List<Task> tasks = taskController.getAll(idProject);
        taskModel.setTasks(tasks);
        
        showJtableTasks(!tasks.isEmpty());
    }
    
    private void showJtableTasks(boolean hasTasks){
        if(hasTasks){
            if(jPanelEmptyList.isVisible()){
                jPanelEmptyList.setVisible(false);
                jPanelTaskList.remove(jPanelEmptyList);
            }
            
            jPanelTaskList.add(jScrollPaneTasks);
            jScrollPaneTasks.setVisible(true);
            jScrollPaneTasks.setSize(jPanelTaskList.getWidth(), jPanelTaskList.getHeight());
        } else{
            if(jScrollPaneTasks.isVisible()){
                jScrollPaneTasks.setVisible(false);
                jPanelTaskList.remove(jScrollPaneTasks);
            }
            
            jPanelTaskList.add(jPanelEmptyList);
            jPanelEmptyList.setVisible(true);
            jPanelEmptyList.setSize(jPanelTaskList.getWidth(), jPanelTaskList.getHeight());
        }
    }
    
    public void loadProjects(){
        List<Project> projects = projectController.getAll();
        
        projectsModel.clear();
        
        for (int i = 0; i < projects.size(); i++) {
            
            Project project = projects.get(i);
            
            projectsModel.addElement(project);
            
        }
        jListProjects.setModel(projectsModel);
    }
    
}
